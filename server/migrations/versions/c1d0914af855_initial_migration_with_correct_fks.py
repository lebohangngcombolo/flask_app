"""Initial migration with correct FKs

Revision ID: c1d0914af855
Revises: 
Create Date: 2025-06-20 12:26:05.391221

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'c1d0914af855'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('conversations',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(length=200), nullable=True),
    sa.Column('is_stokvel_related', sa.Boolean(), nullable=True),
    sa.Column('stokvel_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['stokvel_id'], ['stokvel_group.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('messages',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('conversation_id', sa.String(length=36), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('bank_account')
    op.drop_table('kyc_verification')
    op.drop_table('transaction')
    with op.batch_alter_table('notification_settings', schema=None) as batch_op:
        batch_op.add_column(sa.Column('email_announcements', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('email_stokvel_updates', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('email_marketplace_offers', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('push_announcements', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('push_stokvel_updates', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('push_marketplace_offers', sa.Boolean(), nullable=True))
        batch_op.drop_column('email_notifications')
        batch_op.drop_column('sms_notifications')

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('two_factor_method', sa.String(length=10), nullable=True))
        batch_op.drop_index(batch_op.f('idx_user_email'))
        batch_op.drop_index(batch_op.f('idx_user_phone'))
        batch_op.drop_column('kyc_verification_date')
        batch_op.drop_column('kyc_status')
        batch_op.drop_column('kyc_rejection_reason')

    with op.batch_alter_table('user_preferences', schema=None) as batch_op:
        batch_op.add_column(sa.Column('data_for_personalization', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('data_for_analytics', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('data_for_third_parties', sa.Boolean(), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_preferences', schema=None) as batch_op:
        batch_op.drop_column('data_for_third_parties')
        batch_op.drop_column('data_for_analytics')
        batch_op.drop_column('data_for_personalization')

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('kyc_rejection_reason', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('kyc_status', sa.VARCHAR(length=20), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('kyc_verification_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.create_index(batch_op.f('idx_user_phone'), ['phone'], unique=False)
        batch_op.create_index(batch_op.f('idx_user_email'), ['email'], unique=False)
        batch_op.drop_column('two_factor_method')

    with op.batch_alter_table('notification_settings', schema=None) as batch_op:
        batch_op.add_column(sa.Column('sms_notifications', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('email_notifications', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.drop_column('push_marketplace_offers')
        batch_op.drop_column('push_stokvel_updates')
        batch_op.drop_column('push_announcements')
        batch_op.drop_column('email_marketplace_offers')
        batch_op.drop_column('email_stokvel_updates')
        batch_op.drop_column('email_announcements')

    op.create_table('transaction',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('transaction_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('transaction_pkey'))
    )
    op.create_table('kyc_verification',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('id_document_path', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('proof_of_address_path', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('proof_of_income_path', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('bank_statement_path', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('date_of_birth', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('id_number', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('tax_number', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('employment_status', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('monthly_income', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('bank_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('account_number', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('branch_code', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('street_address', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('city', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('province', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('postal_code', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('country', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('verification_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('rejection_reason', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('kyc_verification_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('kyc_verification_pkey'))
    )
    op.create_table('bank_account',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('bank_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('account_number', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('is_default', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('bank_account_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('bank_account_pkey'))
    )
    op.drop_table('messages')
    op.drop_table('conversations')
    # ### end Alembic commands ###
