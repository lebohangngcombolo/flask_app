"""Update GroupJoinRequest for category, tier, amount

Revision ID: 7a449d24b63e
Revises: 6f4dcd3a64b8
Create Date: 2025-07-02 19:11:38.116037

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '7a449d24b63e'
down_revision = '6f4dcd3a64b8'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('beneficiary')
    with op.batch_alter_table('group_join_request', schema=None) as batch_op:
        batch_op.add_column(sa.Column('category', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('tier', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('amount', sa.Float(), nullable=True))
       

    # Backfill with a default value (adjust as needed)
    op.execute("UPDATE group_join_request SET category='unknown' WHERE category IS NULL;")
    op.execute("UPDATE group_join_request SET tier='unknown' WHERE tier IS NULL;")
    op.execute("UPDATE group_join_request SET amount=0 WHERE amount IS NULL;")

    # Now set NOT NULL
    with op.batch_alter_table('group_join_request', schema=None) as batch_op:
        batch_op.alter_column('category', nullable=False)
        batch_op.alter_column('tier', nullable=False)
        batch_op.alter_column('amount', nullable=False)

    with op.batch_alter_table('transaction', schema=None) as batch_op:
        batch_op.alter_column('fee',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('transaction', schema=None) as batch_op:
        batch_op.alter_column('fee',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)

    with op.batch_alter_table('group_join_request', schema=None) as batch_op:
        batch_op.drop_column('amount')
        batch_op.drop_column('tier')
        batch_op.drop_column('category')

    op.create_table('beneficiary',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('account_number', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('beneficiary_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('beneficiary_pkey'))
    )
    # ### end Alembic commands ###
